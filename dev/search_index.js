var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DUNEatLapp","category":"page"},{"location":"#DUNEatLapp","page":"Home","title":"DUNEatLapp","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DUNEatLapp.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DUNEatLapp]","category":"page"},{"location":"#DUNEatLapp.Condition_Cluster_Max-Tuple{DataFrames.DataFrame, Float64, Float64, Bool}","page":"Home","title":"DUNEatLapp.Condition_Cluster_Max","text":"function ConditionClusterMax(dfUla::DataFrame,radius::Float64,limit::Float64,option::Bool) function to select the clusters with the highest-energy and with no event between them and the limit variable. It accepts a DataFrame for dfUla, a Float for radius and limit (in centimeters) and a Boolen for option.  If option is True, it returns a DataFrame with the number of the event and the energy of the cluster. If option is false, it returns the number of events rejected and the number of initial events.\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.apply_E_resolution-Tuple{Vector, Int64}","page":"Home","title":"DUNEatLapp.apply_E_resolution","text":"function applyEresolution(TrueEdata::Vector, Eresolution::Int) Function to apply an energy resolution on data. This resolution comes from the MicroBoone experiment and it is by default at 10% for 1 MeV. To adjust the resolution, you have to take in account the 10 % and add or subtract to obtain the the desired value. It accepts a vector for the TrueEdata and an integer for the Eresolution. It returns a vector. \n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.apply_std_E_resolution-Tuple{Vector, Real}","page":"Home","title":"DUNEatLapp.apply_std_E_resolution","text":"function applystdEresolution(TrueEdata::Vector,Eresolution::Real) function to apply a sigma/E = resolution / sqrt(E) energy resolution It assumes that the TrueEdata is in MeV, otherwise the results will be incorrect\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.cluster_energy_Max-Tuple{DataFrames.DataFrame, Float64}","page":"Home","title":"DUNEatLapp.cluster_energy_Max","text":"function clusterenergyMax(df::DataFrame,radius::Float64) function to get the cluster with the highest energy. It accepts a DataFrame for df and a Float for radius (in centimeters). It returns a DataFrame with the number of the event and the energy of the cluster.\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.get_capture_position-Tuple{String}","page":"Home","title":"DUNEatLapp.get_capture_position","text":"function getcaptureposition(namefile::String) function to get the capture positions of neutrons It will take a xxxnt_Gammas.csv to return the position of neutron captures using the first gamma of each decay\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.get_evts_index-Tuple{DataFrames.DataFrame}","page":"Home","title":"DUNEatLapp.get_evts_index","text":"function getevtsindex(df::DataFrame) Function to get the index of start and end of each event in a ulalap.csv file It accepts a dataframe and returns a matrix with column corresponding to the: numberofevent  indexstartevt  indexendsevt\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.get_n_primaries-Tuple{String}","page":"Home","title":"DUNEatLapp.get_n_primaries","text":"function getnprimaries(my_file::String) Function to get the number of primaries generated It accepts the name as string of the primary file produced by ulalap and returns the number of primaries that have been used for the simulations\n\n\n\n\n\n","category":"method"},{"location":"#DUNEatLapp.get_rate_neutron_captures_Ar","page":"Home","title":"DUNEatLapp.get_rate_neutron_captures_Ar","text":"function getrateneutroncapturesAr(myfile::String,nameprimary::String,fidu::Real) function to get the rate of neutrons that are captured in LAr and in a fiducial volume of LAr  It accepts a String for myfile, a String for nameprimary and a Real in centimeters for fidu. It returns two floats.\n\n\n\n\n\n","category":"function"},{"location":"#DUNEatLapp.greet_DUNEatLapp-Tuple{}","page":"Home","title":"DUNEatLapp.greet_DUNEatLapp","text":"function greet_DUNEatLapp() Function to test if the package works There is no entry and the output is Hello DUNEatLapp!\n\n\n\n\n\n","category":"method"}]
}
